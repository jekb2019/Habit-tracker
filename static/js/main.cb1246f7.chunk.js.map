{"version":3,"sources":["components/habit.jsx","components/form.jsx","components/navbar.jsx","components/habits.jsx","components/simpleHabits.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","Form","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","type","placeholder","Navbar","Component","totalCount","SimpleHabits","useState","setCount","spanRef","useRef","useCallback","useEffect","App","state","habits","id","map","item","setState","filter","handleAdd","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb1246f7.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n    // Component가 ui에 등록이 될 때 실행 (사용자에게 보여질때)\r\n    componentDidMount() {\r\n        console.log(`habit: ${this.props.habit.name} mounted`);\r\n    }\r\n\r\n    // Component가 지워지기 전에 호출\r\n    componentWillUnmount() {\r\n        console.log(`habit: ${this.props.habit.name} will unmount`);\r\n    }\r\n\r\n    \r\n\r\n    handleIncrement = () => {\r\n        this.props.onIncrement(this.props.habit);\r\n    }\r\n\r\n    handleDecrement = () => {\r\n        this.props.onDecrement(this.props.habit);\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.onDelete(this.props.habit);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {name, count} = this.props.habit;\r\n\r\n        return (\r\n            <li className=\"habit\">\r\n                <span className=\"habit-name\">{name}</span>\r\n                <span className=\"habit-count\">{count}</span>\r\n                <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n                    <i className=\"fas fa-minus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, {memo} from 'react';\r\n\r\nconst Form = memo((props) => {\r\n    // Using React Refs\r\n    const formRef = React.createRef();\r\n    const inputRef = React.createRef();\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault(); //브라우저가 자동으로 새로고침되는걸 막음\r\n        const name = inputRef.current.value;\r\n        name && props.onAdd(name);\r\n        inputRef.current.value = '';\r\n    }\r\n\r\n   return (\r\n       <div className=\"form\">\r\n           <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\r\n               <input ref={inputRef} className=\"add-input\" type=\"text\" placeholder=\"Habit\"></input>\r\n               <button className=\"add-button\">Add</button>\r\n           </form>\r\n       </div>\r\n   );\r\n});\r\nexport default Form;","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <i className=\"fas fa-leaf navbar-logo\"></i>\r\n                <span className=\"navbar-title\">Habit Tracker</span>\r\n            <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\nimport Form from './form';\r\n\r\nclass Habits extends Component {\r\n\r\n    handleIncrement = (habit) => {\r\n        this.props.onIncrement(habit);\r\n    }\r\n\r\n    handleDecrement = (habit) => {\r\n        this.props.onDecrement(habit);\r\n    }\r\n\r\n    handleDelete = (habit) => {\r\n        this.props.onDelete(habit);\r\n    }\r\n    handleAdd = name => {\r\n        this.props.onAdd(name);\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.props.onReset();\r\n    }  \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onAdd={this.handleAdd}/>\r\n                <ul>\r\n                    {\r\n                        this.props.habits.map(habit => (\r\n                        <Habit key={habit.id} habit={habit} \r\n                        onIncrement={this.handleIncrement} \r\n                        onDecrement={this.handleDecrement}\r\n                        onDelete={this.handleDelete}/>  \r\n                        ))\r\n                    }\r\n                </ul>\r\n                <button className=\"reset-button\" onClick={this.handleReset}>Reset All</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { useState, useRef, useCallback, useEffect } from 'react';\r\n\r\nconst SimpleHabits = (props) => {\r\n\r\n    // useState() 는 두가지 값을 리턴한다. count는 실제 state 값이고 setCount는 count를 업데이트할 수 있는 함수이다.\r\n    const [count, setCount] = useState(0);\r\n\r\n    // const spanRef = React.createRef();\r\n    const spanRef = React.useRef();\r\n\r\n    const handleIncrement = useCallback(() => {\r\n        setCount(count + 1);\r\n    });\r\n\r\n    useEffect(()=>{\r\n        console.log(`mounted and updated ${count}`)\r\n    }, []);\r\n\r\n    return (\r\n        <li>\r\n            <span ref={spanRef} className=\"habit-name\">Reading Sample</span>\r\n            <span className=\"habit-count\">{count}</span>\r\n            <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SimpleHabits;\r\n","import './app.css';\nimport React, {Component} from 'react';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\nimport SimpleHabits from './components/simpleHabits';\n\nclass App extends Component {\n\n  state = {\n    habits: [\n        {id: 1, name: 'Reading', count: 0},\n        {id: 2, name: 'Running', count: 0},\n        {id: 3, name: 'Coding', count: 0},\n    ],\n  };\n\n  // Object destructuring to create NEW habit object (deep copy)\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id) {\n        return {...habit, count: habit.count + 1}; // make new habit object\n      } \n      return item;\n    });\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // habits[index].count++;\n    this.setState({habits});\n    \n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id) {\n        const count = habit.count - 1;\n        return {...habit, count: count < 0 ? 0 : count};\n      }\n      return item;\n    });\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // const count = habits[index].count -1;\n    // habits[index].count = count < 0 ? 0 : count;\n    this.setState({habits});\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter(item => item.id !== habit.id);\n    this.setState({habits});\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, {id: Date.now(), name, count: 0,}];\n    this.setState({habits});\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map(habit => {\n      if(habit.count > 0){\n        return {...habit, count:0}\n      }\n      return habit;\n    });\n    this.setState({habits});\n  };\n\n  render() {\n    return (\n      <>\n          <Navbar totalCount={this.state.habits.filter(item => item.count > 0).length}/>\n          <SimpleHabits></SimpleHabits>\n          {/* <Habits habits={this.state.habits} \n            onIncrement={this.handleIncrement} \n            onDecrement={this.handleDecrement}\n            onDelete={this.handleDelete}\n            onAdd={this.handleAdd}\n            onReset={this.handleReset}/> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n// ReactDOM 라이브러리를 사용하여 root아이디를 갖고있는 테그를 찾아 <App> 컴포넌트를 연결시켜준다\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); \n"],"sourceRoot":""}